# Deploying to Cloudflare Pages

This guide will walk you through the process of deploying your static site to Cloudflare Pages using GitHub.

## Prerequisites

- A [GitHub](https://github.com/) account
- A [Cloudflare](https://www.cloudflare.com/) account

## Step 1: Create a GitHub Repository

1. Log in to your GitHub account
2. Click on the "+" icon in the top-right corner and select "New repository"
3. Name your repository (e.g., "my-cloudflare-site")
4. Choose whether to make it public or private
5. Click "Create repository"

## Step 2: Push Your Site to GitHub

If you're starting with this template, follow these commands:

```bash
# Clone the repository
git clone https://github.com/yourusername/my-cloudflare-site.git
cd my-cloudflare-site

# Copy all the template files into this directory
# (You would have downloaded these files already)

# Initialize git, add all files, and commit
git add .
git commit -m "Initial commit"

# Push to GitHub
git push origin main
```

## Step 3: Connect Cloudflare Pages to GitHub

1. Log in to your Cloudflare account
2. Navigate to "Pages" in the dashboard
3. Click "Create a project"
4. Select "Connect to Git"
5. Authenticate with GitHub when prompted
6. Select the repository you created earlier
7. Click "Begin setup"

## Step 4: Configure Your Build Settings

1. Set your project name (this will determine your *.pages.dev URL)
2. Leave the build settings as default for a static site:
   - Build command: (leave empty)
   - Build output directory: (leave empty or set to `.`)
3. Click "Save and deploy"

Cloudflare will automatically detect that this is a static site and deploy it correctly.

## Step 5: Wait for Deployment

Cloudflare Pages will now build and deploy your site. This usually takes less than a minute for simple static sites.

## Step 6: Access Your Site

Once deployment is complete, you can access your site at the URL provided by Cloudflare (typically `https://your-project-name.pages.dev`).

## Custom Domains (Optional)

To use your own domain name:

1. Go to your Cloudflare Pages project
2. Click on "Custom domains"
3. Click "Set up a custom domain"
4. Enter your domain name and follow the instructions

## Updating Your Site

To update your site, simply push changes to your GitHub repository:

```bash
git add .
git commit -m "Update site content"
git push origin main
```

Cloudflare Pages will automatically detect changes and redeploy your site.

## Advanced Configuration

For more advanced configuration options, such as environment variables, build configurations, or using frameworks, refer to the [Cloudflare Pages documentation](https://developers.cloudflare.com/pages/).
